upstream cricalgo_staging_upstream {
  server app-1.cricalgo-staging.svc.cluster.local:8000 weight=90 max_fails=3 fail_timeout=30s;
  server app-canary.cricalgo-staging.svc.cluster.local:8000 weight=10 max_fails=3 fail_timeout=30s;
}

upstream cricalgo_staging_upstream_25 {
  server app-1.cricalgo-staging.svc.cluster.local:8000 weight=75 max_fails=3 fail_timeout=30s;
  server app-canary.cricalgo-staging.svc.cluster.local:8000 weight=25 max_fails=3 fail_timeout=30s;
}

upstream cricalgo_staging_upstream_50 {
  server app-1.cricalgo-staging.svc.cluster.local:8000 weight=50 max_fails=3 fail_timeout=30s;
  server app-canary.cricalgo-staging.svc.cluster.local:8000 weight=50 max_fails=3 fail_timeout=30s;
}

upstream cricalgo_staging_upstream_100 {
  server app-canary.cricalgo-staging.svc.cluster.local:8000 weight=100 max_fails=3 fail_timeout=30s;
}

server {
  listen 80;
  server_name api.cricalgo-staging.example.com;
  
  # Health check endpoint
  location /health {
    access_log off;
    return 200 "healthy\n";
    add_header Content-Type text/plain;
  }
  
  # Main application with canary routing
  location / {
    proxy_pass http://cricalgo_staging_upstream;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_connect_timeout 5s;
    proxy_read_timeout 120s;
    proxy_send_timeout 120s;
    
    # Load balancing method
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
  }
}
