version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/cricalgo
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - APP_ENV=staging
      - DEBUG=false
      - ENABLE_TEST_TOTP_BYPASS=false
      - ENABLE_TEST_CONTEST_SEED=false
      - DB_POOL_SIZE=20
      - DB_MAX_OVERFLOW=30
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 1

  app1:
    build: .
    environment:
      - PORT=8000
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/cricalgo
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - APP_ENV=staging
      - DEBUG=false
      - ENABLE_TEST_TOTP_BYPASS=false
      - ENABLE_TEST_CONTEST_SEED=false
      - DB_POOL_SIZE=20
      - DB_MAX_OVERFLOW=30
    ports:
      - "8001:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 1

  app2:
    build: .
    environment:
      - PORT=8000
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/cricalgo
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - APP_ENV=staging
      - DEBUG=false
      - ENABLE_TEST_TOTP_BYPASS=false
      - ENABLE_TEST_CONTEST_SEED=false
      - DB_POOL_SIZE=20
      - DB_MAX_OVERFLOW=30
    ports:
      - "8002:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 1

  app3:
    build: .
    environment:
      - PORT=8000
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/cricalgo
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - APP_ENV=staging
      - DEBUG=false
      - ENABLE_TEST_TOTP_BYPASS=false
      - ENABLE_TEST_CONTEST_SEED=false
      - DB_POOL_SIZE=20
      - DB_MAX_OVERFLOW=30
    ports:
      - "8003:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 1

  nginx:
    image: nginx:1.25
    ports:
      - "8000:80"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
      - app3

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=cricalgo
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./cric_algo_postgre_sql_schema_ddl.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  worker:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/cricalgo
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - APP_ENV=staging
      - DEBUG=false
      - ENABLE_TEST_TOTP_BYPASS=false
      - ENABLE_TEST_CONTEST_SEED=false
      - CELERY_WORKER_CONCURRENCY=8
      - DB_POOL_SIZE=20
      - DB_MAX_OVERFLOW=30
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
    command: celery -A app.celery_app.celery worker --loglevel=info --concurrency=8

volumes:
  postgres_data:
  redis_data:

# NOTE: Admin UI static files are built to app/static/admin by 'npm run build' in web/admin
# Ensure 'app' service mounts app/static/admin to serve admin
