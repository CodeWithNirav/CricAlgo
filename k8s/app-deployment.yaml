apiVersion: apps/v1
kind: Deployment
metadata:
  name: cricalgo-app
  namespace: cricalgo-staging
  labels:
    app: cricalgo-app
    component: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cricalgo-app
  template:
    metadata:
      labels:
        app: cricalgo-app
        component: api
    spec:
      containers:
      - name: app
        image: cricalgo/app:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: cricalgo-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: cricalgo-secrets
              key: REDIS_URL
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: cricalgo-secrets
              key: JWT_SECRET_KEY
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: cricalgo-secrets
              key: SECRET_KEY
        - name: WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: cricalgo-secrets
              key: WEBHOOK_SECRET
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: cricalgo-secrets
              key: SENTRY_DSN
              optional: true
        envFrom:
        - configMapRef:
            name: cricalgo-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v1/health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: app-logs
        emptyDir: {}
      restartPolicy: Always
